diff --git a/src/oic/oic/__init__.py b/src/oic/oic/__init__.py
index e51c775..722e69e 100644
--- a/src/oic/oic/__init__.py
+++ b/src/oic/oic/__init__.py
@@ -850,7 +850,7 @@ class Client(oauth2.Client):
                 sformat = "jwt"
         elif resp.status_code == 500:
             raise PyoidcError("ERROR: Something went wrong: %s" % resp.text)
-        elif resp.status_code == 400:
+        elif 400 <= resp.status_code < 500:
             # the response text might be a OIDC message
             try:
                 res = ErrorResponse().from_json(resp.text)
diff --git a/src/oic/utils/authn/client.py b/src/oic/utils/authn/client.py
index 87a6688..6f2a941 100644
--- a/src/oic/utils/authn/client.py
+++ b/src/oic/utils/authn/client.py
@@ -45,6 +45,7 @@ def assertion_jwt(cli, keys, audience, algorithm, lifetime=600):
     at = AuthnToken(iss=cli.client_id, sub=cli.client_id,
                     aud=audience, jti=rndstr(32),
                     exp=_now + lifetime, iat=_now)
+    logger.debug('AuthnToken: {}'.format(at.to_dict()))
     return at.to_jwt(key=keys, algorithm=algorithm)
 
 
@@ -309,14 +310,16 @@ class JWSAuthnMethod(ClientAuthnMethod):
         # audience is the OP endpoint
         # audience = self.cli._endpoint(REQUEST2ENDPOINT[cis.type()])
         # OR OP identifier
-        audience = self.cli.provider_info['issuer']
         algorithm = None
         if kwargs['authn_endpoint'] in ['token', 'refresh']:
             try:
                 algorithm = self.cli.registration_info[
                     'token_endpoint_auth_signing_alg']
             except (KeyError, AttributeError):
-                pass
+                pass 
+            audience = self.cli.provider_info['token_endpoint']
+        else:
+            audience = self.cli.provider_info['issuer']
 
         if not algorithm:
             algorithm = self.choose_algorithm(**kwargs)
