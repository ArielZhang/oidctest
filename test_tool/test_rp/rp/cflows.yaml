---
Flows:
  rp-claims-aggregated:
    desc: Can handle aggregated user information
    profile: C,CI,CT,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn
      - AccessToken
      - UserInfo
  rp-claims-distributed:
    desc: Handles distributed user information
    profile: C,CI,CT,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn
      - AccessToken
      - UserInfo
  rp-claims_request-id_token_claims:
    desc: The Relying Party can ask for a specific claim using the 'claims' request
      parameter. The claim should be returned in an ID Token
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn:
          set_request_args:
            claims:
              id_token:
                auth_time: {essential: true}
                email: {essential: true}
      - AccessToken
  rp-claims_request-userinfo_claims:
    desc: The Relying Party can ask for a specific claim using the 'claims' request
      parameter. The claim should be returned in a UserInfo response
    profile: C,IT,CI,CT,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn:
          set_request_args:
            claims:
              userinfo:
                email: {essential: true}
      - AccessToken
      - UserInfo
  rp-discovery-issuer_not_matching_config:
    desc: Retrieve openid-configuration information for OpenID Provider from
      the .well-known/openid-configuration path. Verify that the issuer in
      the openid-configuration matches the one returned by WebFinger
    profile: ..T.
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          expect_exception: IssuerMismatch
          set_discovery_issuer: null
  rp-discovery-jwks_uri_keys:
    desc: Can read and understand jwks_uri
    profile: ..T.
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
    assert:
      bare-keys: null
      providerinfo-has-jwks_uri: null
  rp-discovery-openid_configuration:
    desc: Uses openid-configuration Discovery Information
    profile: ..T.
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
  rp-discovery-webfinger_acct:
    desc: Can Discover Identifiers using acct Syntax
    profile: .T..
    sequence:
      - Webfinger:
          resource:
            pattern: 'acct:{}@{}'
          set_webfinger_resource: null
  rp-discovery-webfinger_url:
    desc: Can Discover Identifiers using URL Syntax
    profile: .T..
    sequence:
      - Webfinger:
          set_webfinger_resource: null
  rp-id_token-aud:
    desc: The Relying Party should request an ID token and compare its aud value
      to the Client ID.
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn:
          conditional_expect_exception:
            condition:
              response_type:
                -
                  - token
                -
                  - code
                  - mode-form_post
                  - token
                -
                  - id_token
                  - token
                -
                  - id_token
                -
                  - code
                  - id_token
            exception: NotForMe
  rp-id_token-bad_asym_sig_rs256:
    desc: Tests if the Relying Party can identify and reject an ID Token with an invalid
      signature. The ID Token has been signed using the asymmetric algorithm RS256.
      For more information see list item 6 in ID Token validation
    profile: '...T'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_request_args:
            id_token_signed_response_alg: RS256
      - SyncAuthn:
          conditional_expect_exception:
            condition:
              response_type:
                -
                  - token
                -
                  - code
                  - id_token
                  - token
                -
                  - id_token
                  - token
                -
                  - id_token
                -
                  - code
                  - id_token
                -
                  - code
                  - id_token
            exception: BadSignature
  rp-id_token-bad_es256_sig:
    desc: The Relying Party should reject invalid asymmetric ID Token signature which
      has been signed using the algorithm ES256
    profile: '...T'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_request_args:
            id_token_signed_response_alg: ES256
      - SyncAuthn:
          conditional_expect_exception:
            condition:
              response_type:
                -
                  - token
                -
                  - code
                  - id_token
                  - token
                -
                  - id_token
                  - token
                -
                  - id_token
                -
                  - code
                  - id_token
            exception: BadSignature
  rp-id_token-bad_symmetric_sig_hs256:
    desc: Tests if the Relying Party can identify and reject an ID Token with an invalid
      signature. The ID Token has been signed using the symmetric algorithm HS256. For
      more information see list item 6 in ID Token validation
    profile: '...T'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_request_args:
            id_token_signed_response_alg: HS256
      - SyncAuthn:
          conditional_expect_exception:
            condition:
              response_type:
                -
                  - token
                -
                  - code
                  - id_token
                  - token
                -
                  - id_token
                  - token
                -
                  - id_token
                -
                  - code
                  - id_token
            exception: BadSignature
  rp-id_token-iat:
    desc: The Relying Party should request an ID token if it does not contain a
      iat claim it should be rejected
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn:
          conditional_expect_exception:
            condition:
              response_type:
                -
                  - token
                -
                  - code
                  - id_token
                  - token
                -
                  - id_token
                  - token
                -
                  - id_token
                -
                  - code
                  - id_token
            exception: MissingRequiredAttribute
  rp-id_token-kid_absent_multiple_jwks:
    desc: If there are multiple keys in the referenced JWK Set document, a kid value
      MUST be provided in the JOSE Header
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn:
          conditional_expect:
            condition:
              response_type:
                -
                  - token
                -
                  - code
                  - id_token
                  - token
                -
                  - id_token
                  - token
                -
                  - id_token
                -
                  - code
                  - id_token
            exception: PyoidcError
  rp-id_token-kid_absent_single_jwks:
    desc: If the JWK supplied in jwks_uri only contains a single key the ID
      Token does not need to contain a kid claim
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn
      - AccessToken:
          conditional_excecution:
            profile: 'CIT,IT,I...'
  rp-id_token-mismatching_issuer:
    desc: The Relying Party should request an ID token and reject it if the issuer identifier
      for the OpenID Provider is not matching the issuer in the returned ID Token
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_request_args:
            id_token_signed_response_alg: HS256
      - SyncAuthn:
          conditional_expect_exception:
            condition:
              response_type:
                -
                  - token
                -
                  - code
                  - id_token
                  - token
                -
                  - id_token
                  - token
                -
                  - id_token
                -
                  - code
                  - id_token
            exception: IssuerMismatch
      - AccessToken:
          conditional_expect_exception:
            condition:
              response_type:
                -
                  - code
            exception: IssuerMismatch
  rp-id_token-none:
    desc: Can Request and Use unSigned ID Token Response
    profile: 'C,CT,CIT...T'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_request_args:
            id_token_signed_response_alg: null
      - SyncAuthn:
          set_op_args:
            response_type: code
      - AccessToken
  rp-id_token-sig_none:
    desc: Tests if the Relying Party can request and use unsigned ID Tokens. Use Code
      flow and set alg=null
    profile: 'C...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_request_args:
            id_token_signed_response_alg: null
      - SyncAuthn
      - AccessToken
  rp-id_token-sub:
    desc: The Relying Party should request an ID token and reject it if the sub
      claim is missing
    profile: 'C,CT...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn:
          conditional_expect_exception:
            condition:
              response_type:
                -
                  - token
                -
                  - code
                  - id_token
                  - token
                -
                  - id_token
                  - token
                -
                  - id_token
                -
                  - code
                  - id_token
            exception: MissingRequiredAttribute
  rp-id_token-bad_c_hash:
    desc: The Relying Party should request an ID token and reject it if the
      c_hash claim is incorrect
    profile: 'CIT,CI...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn:
          conditional_expect_exception:
            condition:
              response_type:
                -
                  - code
                  - id_token
                  - token
                -
                  - code
                  - id_token
            exception: CHashError
  rp-id_token-bad_at_hash:
    desc: The Relying Party should request an ID token and reject it if the
      at_hash claim is incorrect
    profile: 'CIT,IT...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn:
          conditional_expect_exception:
            condition:
              response_type:
                -
                  - code
                  - id_token
                  - token
                -
                  - id_token
                  - token
            exception: AtHashError
  rp-id_token-sig+enc:
    desc: Can request and use signed and encrypted ID Token
    profile: ...T
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_request_args:
            id_token_signed_response_alg: RS256
            id_token_encrypted_response_alg: RSA1_5
            id_token_encrypted_response_enc: A128CBC-HS256
      - SyncAuthn
      - AccessToken:
          conditional_excecution:
            profile: 'CIT,CI,C,CT...'
  rp-id_token-sym_sig:
    desc: Accept Valid Symmetric ID Token Signature
    profile: I...T
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_request_args:
            id_token_signed_response_alg: HS256
      - SyncAuthn:
          set_op_args:
            response_type:
              - id_token
  rp-key_rotation-op_enc_key:
    desc: Support OP Encryption Key Rotation
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn:
          set_op_args:
            request_method: request
            request_object_encryption_alg: RSA1_5
            request_object_encryption_enc: A128CBC-HS256
      - UpdateProviderKeys:
          remove_grant: null
      - SyncAuthn:
          set_op_args:
            request_method: request
            request_object_encryption_alg: RSA1_5
            request_object_encryption_enc: A128CBC-HS256
  rp-key_rotation-op_sign_key:
    desc: Support OP Encryption Key Rotation
    profile: 'C...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn
      - AccessToken
      - UpdateProviderKeys:
          remove_grant: null
      - SyncAuthn
      - AccessToken
  rp-key_rotation-rp_enc_key:
    desc: Can Request and Use Encrypted UserInfo Response
    profile: 'C,CT...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_jwks_uri: null
          set_request_args:
            userinfo_encrypted_response_alg: RSA1_5
            userinfo_encrypted_response_enc: A128CBC-HS256
      - SyncAuthn
      - AccessToken
      - UserInfo
      - RotateKey:
          set_op_args:
            jwks_path: static/jwk.json
            new_key:
              bits: 2048
              type: RSA
              use:
                - enc
            new_kid: rotated_enc_key
            old_key:
              alg: RSA1_5
              use: enc
      - SyncAuthn
      - AccessToken
      - UserInfo
      - RestoreKeyJar:
          set_op_args:
            jwks_path: static/jwk.json
  rp-key_rotation-rp_sign_key:
    desc: Can Request and Use Encrypted UserInfo Response
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_jwks_uri: null
      - SyncAuthn:
          set_op_args:
            request_method: request
            request_object_signing_alg: ES256
      - RotateKey:
          set_op_args:
            jwks_path: static/jwk.json
            new_key:
              crv: P-256
              type: EC
              use:
                - sig
            new_kid: rotated_sig_key
            old_key:
              alg: ES256
              use: sig
      - SyncAuthn:
          set_op_args:
            request_method: request
            request_object_signing_alg: ES256
      - RestoreKeyJar:
          set_op_args:
            jwks_path: static/jwk.json
  rp-nonce-invalid:
    desc: If a nonce value was sent in the Authentication Request the Relying Party
      must validate the nonce returned in the ID Token.
    profile: I,IT,CI,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn:
          expect_exception: PyoidcError
  rp-nonce-unless_code_flow:
    desc: The Relying Party should always send a nonce as a request parameter while
      using implicit or hybrid flow. Since the server is suppose to return the nonce
      in the ID Token return from Authorization Endpoint, see ID Token required claims
      in hybrid flow or implicit flow. When using Code flow the the nonce is not required,
      see ID Token validation for code flow
    profile: I,IT,CI,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn:
          set_request_args:
            nonce: null
  rp-registration-dynamic:
    desc: Uses Dynamic Registration
    profile: '...T'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
  rp-registration-redirect_uris:
    desc: Sends redirect_uris value which only contains a empty string while doing a
      registration request. Then send a valid redirect_uris list
    profile: '...T'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          expect_exception: RegistrationError
          set_request_args:
            redirect_uris:
              - ''
  rp-registration-uses_https_endpoints:
    desc: Sends endpoints which does not use https. Should be rejected by the OP.
    profile: '...T'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          expect_exception: RegistrationError
          set_request_args:
            initiate_login_uri: http://test.com
            jwks_uri: http://test.com
            redirect_uris:
              - 'http://test.com'
  rp-registration-well_formed_jwk:
    desc: ''
    profile: '...T'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_request_args:
            id_token_signed_response_alg: RS256
            jwks:
              keys:
                -
                    e: AQAB
                    kid: a1
                    kty: RSA
                    n: tAAzYdbiWDAKI8Q3s1crQRuVp0QXpyGgnzx_sGItC2rhdug68gE9v5mfK-7SJCBpuZXzX1YevJ25B0LhNQSWqvb6gYwlNHs33G8VmSzjpqFazItnhKMPnEehCXmPl7iFi8VV0NCC5_uH9xP61TClWsE8B7i4CV6y9B0hZI22p2M
                    use: sig

      - SyncAuthn:
          set_op_args:
            response_type:
              - id_token
  rp-request_uri-enc:
    desc: The Relying Party can pass a Request Object by reference using the request_uri
      parameter. Encrypt the Request Object using RSA1_5 and A128CBC-HS256 algorithms
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn:
          set_op_args:
            base_path: 'https://localhost:8088/request_objects/'
            local_dir: ./request_objects
            request_method: file
            request_object_encryption_alg: RSA1_5
            request_object_encryption_enc: A128CBC-HS256
  rp-request_uri-sig:
    desc: The Relying Party can pass a Request Object by reference using the request_uri
      parameter. Sign the Request Object using the RS256 algorithm
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_jwks_uri: null
      - SyncAuthn:
          set_op_args:
            base_path: 'https://localhost:8088/request_objects/'
            local_dir: ./request_objects
            request_method: file
            request_object_signing_alg: RS256
  rp-request_uri-sig+enc:
    desc: The Relying Party can pass a Request Object by reference using the request_uri
      parameter. Encrypt the Request Object using RSA1_5 and A128CBC-HS256 algorithms
      and sign it using RS256 algorithm
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_jwks_uri: null
      - SyncAuthn:
          set_op_args:
            base_path: 'https://localhost:8088/request_objects/'
            local_dir: ./request_objects
            request_method: file
            request_object_encryption_alg: RSA1_5
            request_object_encryption_enc: A128CBC-HS256
            request_object_signing_alg: RS256
  rp-request_uri-unsigned:
    desc: The Relying Party can pass a Request Object by reference using the request_uri
      parameter. The Request Object should set alg=null
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn:
          set_op_args:
            base_path: 'https://localhost:8088/request_objects/'
            local_dir: ./request_objects
            request_method: file
            request_object_encryption_alg: RSA1_5
            request_object_encryption_enc: A128CBC-HS256
            request_object_signing_alg: null
  rp-response_mode-form_post:
    desc: Can Make Request with response_mode=form_post
    profile: I,IT,CI,CT,CIT,...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_request_args:
            id_token_signed_response_alg: RS256
      - SyncAuthn:
          set_request_args:
            response_mode:
              - form_post
  rp-response_type-code:
    desc: Can Make Request with 'code' Response Type
    profile: C...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn
  rp-response_type-id_token:
    desc: Can Make Request with 'id_token' Response Type
    profile: I...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_request_args:
            id_token_signed_response_alg: RS256
      - SyncAuthn
  rp-response_type-id_token+token:
    desc: Can Make Request with 'id_token token' Response Type
    profile: IT...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_request_args:
            id_token_signed_response_alg: RS256
      - SyncAuthn
  rp-scope-userinfo_claims:
    desc: The Relying Party should be able to request claims using Scope Values
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn:
          set_request_args:
            scope:
              - openid
              - email
              - profile
      - AccessToken
      - UserInfo
  rp-scope-contains_openid_scope:
    desc: The Relying Party should always add the openid scope value while sending an
      Authorization Request.
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn:
          set_expect_error:
            error:
              - incorrect_behavior
            stop: false
          set_request_args:
            scope:
              - wrong
          remove_post_test: valid_code
  rp-token_endpoint-client_secret_basic:
    desc: Can Make Access Token Request with 'client_secret_basic' Authentication
    profile: C,CI,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn
      - AccessToken:
          set_op_args:
            authn_method: client_secret_basic
  rp-token_endpoint-client_secret_jwt:
    desc: Can Make Access Token Request with 'client_secret_jwt' Authentication
    profile: C,CI,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_request_args:
            token_endpoint_auth_method: client_secret_jwt
      - SyncAuthn
      - AccessToken:
          set_op_args:
            authn_method: client_secret_jwt
  rp-token_endpoint-client_secret_post:
    desc: Can Make Access Token Request with 'client_secret_post' Authentication
    profile: C,CI,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_request_args:
            token_endpoint_auth_method: client_secret_post
      - SyncAuthn
      - AccessToken:
          set_op_args:
            authn_method: client_secret_post
  rp-token_endpoint-private_key_jwt:
    desc: Can Make Access Token Request with 'private_key_jwt' Authentication
    profile: C,CI,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_jwks_uri: null
          set_request_args:
            token_endpoint_auth_method: private_key_jwt
      - SyncAuthn
      - AccessToken:
          set_request_args:
            authn_method: private_key_jwt
  rp-user_info-bad_sub_claim:
    desc: Reject UserInfo with Invalid Sub claim
    profile: C,CI,CT,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn
      - AccessToken
      - UserInfo:
          expect_exception: SubjectMismatch
  rp-user_info-bearer_body:
    desc: Accesses UserInfo Endpoint with form-encoded body method
    profile: C,CI,CT,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn
      - AccessToken
      - UserInfo:
          set_request_args:
            behavior: token_in_message_body
  rp-user_info-bearer_header:
    desc: 'Accesses UserInfo Endpoint with Header Method '
    profile: C,CI,CT,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration
      - SyncAuthn
      - AccessToken
      - UserInfo:
          set_request_args:
            behavior: use_authorization_header
  rp-user_info-enc:
    desc: 'Can Request and Use Encrypted UserInfo Response '
    profile: C,CI,CT,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_jwks_uri: null
          set_request_args:
            userinfo_encrypted_response_alg: RSA1_5
            userinfo_encrypted_response_enc: A128CBC-HS256
      - SyncAuthn
      - AccessToken
      - UserInfo
  rp-user_info-sig+enc:
    desc: Can Request and Use Signed and Encrypted UserInfo Response
    profile: C,CI,CT,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_jwks_uri: null
          set_request_args:
            userinfo_encrypted_response_alg: RSA1_5
            userinfo_encrypted_response_enc: A128CBC-HS256
            userinfo_signed_response_alg: RS256
      - SyncAuthn
      - AccessToken
      - UserInfo
  rp-user_info-sign:
    desc: Can Request and Use Signed UserInfo Response
    profile: C,CI,CT,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_jwks_uri: null
          set_request_args:
            userinfo_signed_response_alg: RS256
      - SyncAuthn
      - AccessToken
      - UserInfo
  rp-user_info-query:
    desc: Can send Access Token as URI query parameter
    profile: ...
    sequence:
      - Webfinger:
          set_webfinger_resource: null
      - Discovery:
          set_discovery_issuer: null
      - Registration:
          set_jwks_uri: null
      - SyncAuthn
      - AccessToken
      - UserInfo:
          set_request_args:
            behavior: as_query_parameter
Order:
  - rp-discovery
  - rp-registration
  - rp-response_type
  - rp-response_mode
  - rp-token_endpoint
  - rp-id_token
  - rp-claims_request
  - rp-request_uri
  - rp-scope
  - rp-nonce
  - rp-key_rotation
  - rp-user_info
Desc:
  rp-discovery: Discovery
  rp-registration: Dynamic Client Registration
  rp-response_type: Response Type
  rp-response_mode: Response Mode
  rp-token_endpoint: Token Endpoint
  rp-id_token: ID Token
  rp-claims_request: claims Request Parameter
  rp-request_uri: request_uri Request Parameter
  rp-scope: scope Request Parameter
  rp-nonce: nonce Request Parameter
  rp-key_rotation: Key Rotation
  rp-user_info: Userinfo Endpoint
  Req: Misc Request Parameters
  OAuth: OAuth behaviors
  ClientAuth: Client Authentication
  request: request Request Parameter